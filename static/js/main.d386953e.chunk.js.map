{"version":3,"sources":["images/navigate.png","images sync /^/.//.*/.webp$","images/Cpp.webp","images/Javascript.webp","images/Python.webp","components/FullPage.js","sections/HeadSection.js","sections/AboutSection.js","components/Card.js","sections/SkillsSection.js","components/FixedNavbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","FullPage","children","this","props","className","Component","HeadSection","color","document","getElementById","style","backgroundColor","data","title","subtitle","class","links","key","url","activeClass","to","spy","smooth","offset","duration","delay","alt","src","require","maxWidth","AboutSection","name","sections","items","content","Card","skill","SkillsSection","i","FixedNavbar","flag","div","c1","c2","Navbar","fixed","type","onPress","ReactDOM","render","wrap","getElementsByClassName","divs","length","firstChild","borderColor","changeColor","App","React","Boolean","window","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d386953e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/navigate.e1bc4e47.png\";","var map = {\n\t\"./Cpp.webp\": 62,\n\t\"./Javascript.webp\": 63,\n\t\"./Python.webp\": 64\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61;","module.exports = __webpack_public_path__ + \"static/media/Cpp.2a32e84a.webp\";","module.exports = __webpack_public_path__ + \"static/media/Javascript.7c698360.webp\";","module.exports = __webpack_public_path__ + \"static/media/Python.e318f8fe.webp\";","import React , {Component} from 'react';\n\n\nexport default class FullPage extends Component {\n\n    render() {\n        const {children} = this.props\n        return (\n            <div className=\"fullpage container-fluid\" id={`${this.props.id || ``}`}>\n                {children}\n            </div>\n        )\n    }\n}","import React , {Component} from 'react';\nimport data from '../data.json';\nimport { SocialIcon } from 'react-social-icons';\nimport FullPage from '../components/FullPage';\nimport './HeadSection.css';\nimport { Link } from 'react-scroll';\n\nexport default class HeadSection extends Component {\n    constructor() {\n        super();\n        this.color=\"black\";\n    }\n    changeColor() {\n        this.color === \"black\" ? document.getElementById(\"div1\").style.backgroundColor = \"wheat\" : document.getElementById(\"div1\").style.backgroundColor = \"black\"\n    }\n    render() {\n        return (\n            <div className=\"changingTheme\">\n                <FullPage id='div1'>\n                    <div><h1 className=\"title\">{data.title}</h1></div>\n                    <div className=\"col-xs-12\">\n                        <h2 id=\"subtitle\">{data.subtitle}</h2>\n                    </div>\n                    <div class=\"SocialIcons\">\n                        {Object.keys(data.links).map((key) => {\n                            return <SocialIcon url={data.links[key]} />;\n                        })}\n                    </div>\n                    <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={50} duration={500} delay={100}>\n                        <img className=\"downArrow\" alt=\"down\" src={require('../images/navigate.png')} style={{\n                            maxWidth: '40px'\n                        }}/>\n                    </Link>\n                </FullPage>\n            </div>\n        );\n    }\n}","import React , {Component} from 'react';\nimport data from '../data.json';\nimport FullPage from '../components/FullPage';\nimport './AboutSection.css';\nimport { Element } from 'react-scroll';\n\nexport default class AboutSection extends Component {\n    render() {\n        return (\n            <Element name=\"about\" className=\"element\">\n                <div className=\"changingTheme\">\n                    <FullPage id='div2'>\n                        <h2 className=\"title\" id=\"about\">{data.sections[0].title}</h2>\n                        <div className=\"wrapContent\"><p id=\"aboutContent\">{data.sections[0].items[0].content}</p></div>\n                    </FullPage>\n                </div>\n            </Element>\n        );\n    }\n}","import React , {Component} from 'react';\nexport default class Card extends Component {\n    render() {\n        const {skill} = this.props\n        return (\n            <div className=\"panel panel-default col-sm-3\">\n                <div className=\"panel-heading\">{skill.content.title}</div>\n                <div className=\"panel-body\"><img className=\"img-responsive\" alt=\"cpp\" src={require(`../images/${skill.content.title}.webp`)}/></div>\n            </div>\n        )\n    }\n}","import React , {Component} from 'react';\nimport data from '../data.json';\nimport FullPage from '../components/FullPage';\nimport Card from '../components/Card'\nimport './SkillsSection.css'\nimport { Element } from \"react-scroll\";\nimport AwesomeButtonStyles from \"react-awesome-button/src/styles/styles.scss\";\n\nexport default class SkillsSection extends Component {\n    render() {\n        return (\n            <Element name=\"skills\" className=\"element\">\n                <div className=\"changingTheme\">\n                    <FullPage id='div3' className=\"changingTheme\">\n                        <h2 className=\"title\">{data.sections[1].title}</h2>\n                        {data.sections[1].items.map(i => {\n                            return <Card skill={i} />;\n                        })}\n                    </FullPage>\n                </div>\n            </Element>\n        );\n    }\n}","import React , {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-scroll';\nimport { Navbar } from 'react-bootstrap';\nimport './FixedNavbar.css';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport Snowfall from 'react-snowfall';\nimport App from '../App'\n\nexport default class FixedNavbar extends Component {\n    constructor() {\n        super();\n        this.flag = 2;\n    }\n    changeColor(div , c1 , c2) {\n        div.style.backgroundColor === c1 ? div.style.backgroundColor = c2 : div.style.backgroundColor = c1\n        div.style.color === c2 ? div.style.color = c1 : div.style.color = c2\n    }\n    render() {\n        return (\n            <Navbar className=\"nav\" fixed=\"top\">\n                <div id=\"btn1\"><AwesomeButton type=\"secondary\"><Link className=\"SkillsLink\" activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={50} duration={500} delay={100}>About</Link></AwesomeButton></div>\n                <div id=\"btn2\"><AwesomeButton type=\"secondary\"><Link className=\"SkillsLink\" activeClass=\"active\" to=\"skills\" spy={true} smooth={true} offset={50} duration={500} delay={100}>Skills</Link></AwesomeButton></div>\n                <div id=\"btn3\"><AwesomeButton type=\"secondary\" onPress={() => {\n                    if(this.flag === 1)\n                    ReactDOM.render(<div><App/></div> , document.getElementById('root'))\n                    else\n                        ReactDOM.render(<div><Snowfall color=\"red\"/><App/></div> , document.getElementById('root'))\n                    let wrap = document.getElementsByClassName(\"wrapContent\")\n                    let divs = document.getElementsByClassName(\"changingTheme\")\n                    if(this.flag === 3) {\n                        for(let i = 0 ; i < divs.length ; i++) {\n                            divs[i].firstChild.style.backgroundColor = \"lightblue\";\n                            divs[i].firstChild.style.color = \"red\"\n                            wrap[0].style.backgroundColor = \"white\"\n                            wrap[0].style.color = \"black\"\n                            wrap[0].style.borderColor = \"white\"\n                        }\n                        this.flag = 1;\n                    } else {\n                        this.changeColor(divs[0].firstChild , \"wheat\" , \"rgb(27, 27, 27)\")\n                        this.changeColor(divs[1].firstChild , \"rgb(27, 27, 27)\" , \"wheat\")\n                        this.changeColor(divs[2].firstChild , \"wheat\" , \"rgb(27, 27, 27)\")\n                        this.changeColor(wrap[0] , \"wheat\" , \"rgb(27, 27, 27)\")\n                        this.flag++;\n                    }\n                }}><i class=\"fas fa-magic\"></i></AwesomeButton></div>\n            </Navbar>\n        );\n    }\n}","import React from \"react\";\nimport HeadSection from './sections/HeadSection';\nimport AboutSection from './sections/AboutSection';\nimport SkillsSection from './sections/SkillsSection';\nimport FixedNavbar from './components/FixedNavbar';\nimport \"./App.css\";\n\n\nclass App extends React.Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <FixedNavbar />\n        <HeadSection />\n        <AboutSection />\n        <SkillsSection />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}